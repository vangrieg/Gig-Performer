On ControlChangeEvent(m: ControlChangeMessage) Matching 127 from SWITCH_B //resync LEDs when bank is changed
    Var index: integer = GetCurrentSongPartIndex()
        overdub: double = GetWidgetValue(lprOverdub)
        memory: boolean = true
        recording: boolean
        playing: boolean
        ccvalue: integer = GetCCValue (m)
        newValue: double = GetWidgetValue (fsBank)
    If
        GetWidgetValue(lprMemory) == 0.0 Then
        memory = false
    Else
        memory = true
    End
    If GetWidgetValue(lprRecording) == 0.0 Then 
        recording = false
    Else
        recording = true
    End
    If GetWidgetValue(lprPlaying) == 0.0 Then
        playing = false
    Else
        playing = true
    End
    //Print("cc value is " + newValue)
    If newValue == 0.0 Then
        IsBankUp = false
        LEDControlR (FSOUT, FSLEDs, index, FSChan)
    Else
        IsBankUp = true
        //Print("bank up current song part is " + index)
        If playing == false Then
            LEDControl (FSOUT, CCA, 0, FSChan)
        Else
            LEDControl (FSOUT, CCA, 1, FSChan)
        End
        LEDControl (FSOUT, CCB, 0, FSChan)
        If overdub == 0.0 Then
            LEDControl (FSOUT, CCC, 0, FSChan)
        Else
            LEDControl (FSOUT, CCC, 1, FSChan)
        End
        If memory == false Then
            LEDControl (FSOUT, CCD, 0, FSChan)
        Else
            LEDControl (FSOUT, CCD, 1, FSChan)
        End
    End
End

On ControlChangeEvent (c : ControlChangeMessage) Matching 20,21,22,23 From SWITCH_B
    Var 
        CC : integer = GetCCNumber(c)
        value: integer = GetCCValue(c)
        index: integer 
        //songpart: integer = GetCurrentSongPartIndex () 
    If InSetlistMode() == true Then
        If  value > 64 Then
            //Print("CC# is " + CC)
            Select
                CC == 20 Do
                    index = 0
                CC == 21 Do
                    index = 1
                CC == 22 Do
                    index = 2
                CC == 23 Do
                    index = 3
            End
            //Print("index is " + index)
            If index <> GetCurrentSongPart() Then
                SetSongPart(index)
            End
            LEDControlR (FSOUT, FSLEDs, GetCurrentSongPartIndex (), FSChan)
        End
    Else
        Notify("Switch to setlist mode!")
    End    
End

On OSCMessageReceived (msg: OSCMessage) Matching "/looperTrigger"
    If InSetlistMode() == true And GetWidgetValue (lprRecording) == 0.0 And GetWidgetValue (lprOverdub) == 0.0 And GetWidgetValue (lprMemory) == 1.0 Then
        If GetWidgetValue (lprPlaying) == 0.0 Then
            SetWidgetValue (lprTrigger, 1.0)
            ResetWidgetValue (lprStop)
        Else
            SetWidgetValue (lprStop, 1.0)
            ResetWidgetValue (lprTrigger)
        End
    End
End